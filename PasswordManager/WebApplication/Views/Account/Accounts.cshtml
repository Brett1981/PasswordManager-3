@model AccountViewModel

@{
    ViewBag.Title = "Accounts";
    var accounts = ViewBag.Accounts;
    var unattachedAccounts = ViewBag.Unattached;
    var categories = ViewBag.Categories;
}

<style>
    th, td {
        width: 20%;
        vertical-align: middle !important;
    }

    .search-box {
        display: inline-flex;
        width: 20%;
    }

    .dropdown-text {
        position: absolute;
        width: 75%;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .copyable:hover {
        cursor: pointer;
    }

    .hidetext {
        -webkit-text-security: disc;
    }

    .hidetext:hover {
        cursor: pointer;
        -webkit-text-security: none;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    function deleteAccount(itemId) {
        console.log(itemId);
        if (confirm("Are you sure you want to delete this account?"))
        {
            $.ajax({
                type: 'DELETE',
                url: '@(Url.Action("Delete", "Account"))',
                data: { 'id': itemId },
                cache: false,
                success: function (result) {
                    window.location.href = '@(Url.Action("Accounts", "Account"))';
                },
            });
        }
    }

    $(document).ready(function () {
        $('#addModal').on('hidden.bs.modal', function (e) {
            var categoryField = document.getElementById("addCategory");
            categoryField.value = "";
        });
    });

    function getCategory(categoryId) {
        $.ajax({
            type: 'GET',
            url: '@(Url.Action("GetCategoryById", "Account"))',
            data: { 'id': categoryId },
            cache: false,
            success: function (result) {
                var categoryField = document.getElementById("addCategory");

                categoryField.value = result.name;
            },
        });
    }

    function getAccount(itemId) {
        $.ajax({
            type: 'GET',
            url: '@(Url.Action("GetById", "Account"))',
            data: { 'id': itemId },
            cache: false,
            success: function (result) {
                var nameField = document.getElementById("updateName");
                var categoryField = document.getElementById("updateCategory");
                var loginField = document.getElementById("updateLogin");
                var passwordField = document.getElementById("updatePassword");
                var urlField = document.getElementById("updateUrl");
                var form = document.getElementById("updateForm");

                nameField.value = result.name;
                categoryField.value = result.category;
                loginField.value = result.login;
                passwordField.value = result.password;
                urlField.value = result.url;

                form.action += '/' + itemId;
            },
        });
    }

    function selectDropdown(elt) {
        elt.previousElementSibling.value = elt.options[elt.selectedIndex].text;
    }

    function showPassword() {
        var elt = document.getElementsByClassName("hidetext");
    }

    function showInputPassword(elt) {
        if (elt.previousElementSibling.type === "password") {
            elt.previousElementSibling.type = "text";
        } else {
            elt.previousElementSibling.type = "password";
        }
    }

    function copyToClipboard(value) {
        navigator.clipboard.writeText(value)
    }
</script>

<div>
    <h1 class="display-4">Accounts</h1>
    @using (Html.BeginForm("Accounts", "Account", FormMethod.Post))
    {
        <div class="form-group search-group" >
            @Html.TextBoxFor(m => m.Search.Value, new { @class = "form-control search-box" })
            @Html.DropDownListFor(m => m.Search.SearchBy, new List<SelectListItem>
            {
                new SelectListItem { Text = "By name", Value = "name" },
                new SelectListItem { Text = "By category", Value = "category" },
            }, new { @class = "form-control search-box" })
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    }
    <div>
        @foreach (var category in categories)
        {
            <table class="table table-hover">
                <tr class="table-primary">
                    <th colspan="5">@category.Name</th>
                </tr>
                @foreach (var account in accounts)
                {
                    @if (account.CategoryId == category.Id)
                    {
                        <tr>
                            <td>@account.Name</td>
                            <td><a class="copyable" onclick="copyToClipboard('@account.Login')">@account.Login</a></td>
                            <td><a class="hidetext" onclick="copyToClipboard('@account.Password')">@account.Password</a></td>
                            <td><a href="@account.Url">@account.Url</a></td>
                            <td>
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#updateModal" onclick="getAccount(@account.Id)">Edit</button>
                                <button type="button" class="btn btn-primary" onclick="deleteAccount(@account.Id)">Delete</button>
                            </td>
                        </tr>
                    }
                }
                <tr>
                    <td colspan="5">
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addModal" onclick="getCategory(@category.Id)">Add</button>
                    </td>
                </tr>
            </table>
        }
        @if (unattachedAccounts.Count != 0)
        {
            <table class="table table-hover">
                <tr class="table-primary">
                    <th colspan="5">Other accounts</th>
                </tr>
                @foreach (var account in unattachedAccounts)
                {
                    <tr>
                        <td>@account.Name</td>
                        <td><a class="copyable" onclick="copyToClipboard('@account.Login')">@account.Login</a></td>
                        <td><a class="hidetext" onclick="copyToClipboard('@account.Password')">@account.Password</a></td>
                        <td><a href="@account.Url">@account.Url</a></td>
                        <td>
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#updateModal" data-id="@account.Id" onclick="getAccount(@account.Id)">Edit</button>
                            <button type="button" class="btn btn-primary" onclick="deleteAccount(@account.Id)">Delete</button>
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="5">
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addModal">Add</button>
                    </td>
                </tr>
            </table>
        }
    </div>

    <div id="addModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add an account</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("Add", "Account", FormMethod.Post))
                {
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Name)
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            </div>
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Category)
                                @Html.TextBoxFor(m => m.Category, new { @id = "addCategory", @class = "form-control dropdown-text" })
                                @Html.DropDownListFor(m => m.Category, new SelectList(categories, "Id", "Name"), "", new { @class = "form-control", @onchange = "selectDropdown(this)" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Login)
                                @Html.TextBoxFor(m => m.Login, new { @class = "form-control" })
                            </div>
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Password)
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control modal-password" })
                                <input type="checkbox" onclick="showInputPassword(this)"> Show password
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Url)
                            @Html.TextBoxFor(m => m.Url, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="updateModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update an account</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("Update", "Account", FormMethod.Post, new { @id = "updateForm" }))
                {
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Name)
                                @Html.TextBoxFor(m => m.Name, new { @id = "updateName", @class = "form-control" })
                            </div>
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Category)
                                @Html.TextBoxFor(m => m.Category, new { @id = "updateCategory", @class = "form-control dropdown-text" })
                                @Html.DropDownListFor(m => m.Category, new SelectList(categories, "Id", "Name"), "", new { @id = "updateCategoryList", @class = "form-control", @onchange = "selectDropdown(this)" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Login)
                                @Html.TextBoxFor(m => m.Login, new { @id = "updateLogin", @class = "form-control" })
                            </div>
                            <div class="form-group col">
                                @Html.LabelFor(m => m.Password)
                                @Html.PasswordFor(m => m.Password, new { @id = "updatePassword", @class = "form-control modal-password" })
                                <input type="checkbox" onclick="showInputPassword(this)"> Show password
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Url)
                            @Html.TextBoxFor(m => m.Url, new { @id = "updateUrl", @class = "form-control" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Update</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
